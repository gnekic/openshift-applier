---
- name: Set Facts
  hosts: localhost
  connection: local
  vars_files:
  - login-creds.yml
  tasks:
  - include_tasks: setup-test.yml
  - set_fact:
      ignore_differences:
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: ''
          creationTimestamp: null
          generation: 0
          namespace: ''
          resourceVersion: 0
          selfLink: ''
          uid: ''
        spec:
          template:
            metadata:
              creationTimestamp: null
          templateGeneration: 0

- name: Test Provision
  hosts: localhost
  connection: local
  vars:
    provision_daemonset: "{{ lookup('template', 'resources/test-daemonset.yml.j2') | from_yaml }}"
    image_pull_policy: IfNotPresent

  roles:
  - role: openshift-provision
    openshift_clusters:
    - projects:
      - name: provision-test

  tasks:
  - name: Provision DaemonSet
    openshift_provision:
      connection: "{{ openshift_connection }}"
      namespace: provision-test
      resource: "{{ provision_daemonset }}"

  - name: Get DaemonSet
    command: >-
      {{ test_oc_cmd }} get daemonset
      test-daemonset -n provision-test -o json
    register: get_daemonset
    changed_when: false

  - name: Verify DaemonSet
    fail:
      msg: |
        DaemonSet not defined as expected
        >>>
        {{ cmp_daemonset | to_yaml }}
        ===
        {{ got_daemonset | to_yaml }}
        <<<
    vars:
      got_daemonset: "{{ get_daemonset.stdout | from_json | combine(ignore_differences, recursive=True) }}"
      cmp_daemonset: "{{ provision_daemonset | combine(ignore_differences, recursive=True) }}"
    when: >-
      cmp_daemonset.metadata != got_daemonset.metadata or
      cmp_daemonset.spec != got_daemonset.spec

  - name: Check reprovision DaemonSet
    openshift_provision:
      connection: "{{ openshift_connection }}"
      namespace: provision-test
      resource: "{{ provision_daemonset }}"
    register: reprovision_daemonset

  - fail:
      msg: Reprovision indicated change to DaemonSet
    when: reprovision_daemonset.changed

- name: Test Update
  hosts: localhost
  connection: local
  vars:
    provision_daemonset: "{{ lookup('template', 'resources/test-daemonset.yml.j2') | from_yaml }}"
    image_pull_policy: Always

  tasks:
  - name: Apply update to DaemonSet
    openshift_provision:
      connection: "{{ openshift_connection }}"
      namespace: provision-test
      resource: "{{ provision_daemonset }}"

  - name: Get DaemonSet
    command: >-
      {{ test_oc_cmd }} get daemonset
      test-daemonset -n provision-test -o json
    register: get_daemonset
    changed_when: false

  - name: Verify Update DaemonSet
    fail:
      msg: |
        DaemonSet not defined as expected
        >>>
        {{ cmp_daemonset | to_yaml }}
        ===
        {{ got_daemonset | to_yaml }}
        <<<
    vars:
      got_daemonset: "{{ get_daemonset.stdout | from_json | combine(ignore_differences, recursive=True) }}"
      cmp_daemonset: "{{ provision_daemonset | combine(ignore_differences, recursive=True) }}"
    when: >-
      cmp_daemonset.metadata != got_daemonset.metadata or
      cmp_daemonset.spec != got_daemonset.spec

- name: Test Delete
  hosts: localhost
  connection: local
  tasks:
  - name: Delete DaemonSet
    openshift_provision:
      action: delete
      namespace: provision-test
      connection: "{{ openshift_connection }}"
      resource:
        kind: DaemonSet
        metadata:
          name: test-daemonset

  - name: Verify DaemonSet Delete
    command: >-
      {{ test_oc_cmd }} get daemonset
      test-daemonset -n provision-test -o json
    register: get_daemonset
    failed_when: get_daemonset.rc == 0
    changed_when: false
