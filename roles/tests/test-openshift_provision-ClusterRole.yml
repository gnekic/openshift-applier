---
- name: Set Facts
  hosts: localhost
  connection: local
  vars_files:
  - login-creds.yml
  tasks:
  - set_fact:
      test_oc_cmd: >-
        oc
        {% if openshift_connection_certificate_authority is defined %}
        --certificate-authority={{ openshift_connection_certificate_authority | quote }}
        {% endif %}
        {% if openshift_connection_insecure_skip_tls_verify is defined %}
        --insecure-skip-tls-verify={{ openshift_connection_insecure_skip_tls_verify | quote }}
        {% endif %}
        {% if openshift_connection_server is defined %}
        --server={{ openshift_connection_server | quote }}
        {% endif %}
        {% if openshift_connection_token is defined %}
        --token={{ openshift_connection_token | quote }}
        {% endif %}
      openshift_connection:
        server: "{{ openshift_connection_server }}"
        insecure_skip_tls_verify: "{{ openshift_connection_insecure_skip_tls_verify }}"
        token: "{{ openshift_connection_token }}"
      ignore_differences:
        metadata:
          annotations:
            kubectl.kubernetes.io/last-applied-configuration: ''
          creationTimestamp: null

- name: Test Provision
  hosts: localhost
  connection: local
  vars_files:
  - login-creds.yml
  vars:
    provision_clusterrole:
      apiVersion: v1
      kind: ClusterRole
      metadata:
        creationTimestamp: null
        name: test-clusterrole
      rules:
      - apiGroups:
        - ""
        attributeRestrictions: null
        resources:
        - netnamespaces
        verbs:
        - create
        - delete
        - get
        - list
        - update
      - apiGroups:
        - ""
        attributeRestrictions: null
        resources:
        - namespaces
        - projects
        verbs:
        - get
        - list
      - apiGroups:
        - network.openshift.io
        - ""
        attributeRestrictions: null
        resources:
        - clusternetworks
        verbs:
        - get

  roles:
  - role: openshift-provision

  tasks:
  - name: Provision ClusterRole
    openshift_provision:
      connection: "{{ openshift_connection }}"
      resource: "{{ provision_clusterrole }}"

  - name: Get ClusterRole
    command: >-
      {{ test_oc_cmd }} export clusterrole
      test-clusterrole -o json
    register: get_clusterrole
    changed_when: false

  - name: Verify ClusterRole
    fail:
      msg: |
        ClusterRole not defined as expected
        >>>
        {{ cmp_clusterrole | to_yaml }}
        ===
        {{ got_clusterrole | to_yaml }}
        <<<
    vars:
      got_clusterrole: "{{ get_clusterrole.stdout | from_json | combine(ignore_differences, recursive=True) }}"
      cmp_clusterrole: "{{ provision_clusterrole | combine(ignore_differences, recursive=True) }}"
    when: >-
      cmp_clusterrole.metadata != got_clusterrole.metadata or
      cmp_clusterrole.rules != got_clusterrole.rules

  - name: Check reprovision ClusterRole
    openshift_provision:
      connection: "{{ openshift_connection }}"
      resource: "{{ provision_clusterrole }}"
    register: reprovision_clusterrole

  - fail:
      msg: Reprovision indicated change to ClusterRole
    when: reprovision_clusterrole.changed

- name: Test Update
  hosts: localhost
  connection: local
  vars_files:
  - login-creds.yml
  vars:
    provision_clusterrole:
      apiVersion: v1
      kind: ClusterRole
      metadata:
        creationTimestamp: null
        name: test-clusterrole
      rules:
      - apiGroups:
        - network.openshift.io
        - ""
        attributeRestrictions: null
        resources:
        - netnamespaces
        verbs:
        - create
        - delete
        - get
        - list
        - update
      - apiGroups:
        - ""
        attributeRestrictions: null
        resources:
        - namespaces
        - projects
        verbs:
        - get
        - list
      - apiGroups:
        - network.openshift.io
        - ""
        attributeRestrictions: null
        resources:
        - clusternetworks
        verbs:
        - get

  roles:
  - role: openshift-provision

  tasks:
  - name: Apply update to ClusterRole
    openshift_provision:
      connection: "{{ openshift_connection }}"
      resource: "{{ provision_clusterrole }}"

  - name: Get ClusterRole
    command: >-
      {{ test_oc_cmd }} export clusterrole
      test-clusterrole -o json
    register: get_clusterrole
    changed_when: false

  - name: Verify Update ClusterRole
    fail:
      msg: |
        ClusterRole not defined as expected
        >>>
        {{ cmp_clusterrole | to_yaml }}
        ===
        {{ got_clusterrole | to_yaml }}
        <<<
    vars:
      got_clusterrole: "{{ get_clusterrole.stdout | from_json | combine(ignore_differences, recursive=True) }}"
      cmp_clusterrole: "{{ provision_clusterrole | combine(ignore_differences, recursive=True) }}"
    when: >-
      cmp_clusterrole.metadata != got_clusterrole.metadata or
      cmp_clusterrole.rules != got_clusterrole.rules

- name: Test Delete
  hosts: localhost
  connection: local
  vars_files:
  - login-creds.yml
  vars:
    provision_clusterrole:
      kind: ClusterRole
      metadata:
        name: test-clusterrole
  roles:
  - role: openshift-provision
  tasks:
  - name: Delete ClusterRole
    openshift_provision:
      action: delete
      connection: "{{ openshift_connection }}"
      resource: "{{ provision_clusterrole }}"

  - name: Verify ClusterRole Delete
    command: >-
      {{ test_oc_cmd }} export clusterrole
      test-clusterrole -o json
    register: get_clusterrole
    failed_when: get_clusterrole.rc == 0
    changed_when: false
